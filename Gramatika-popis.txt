<if_statement> ::= 1    if <tLPar> <condition> <tRPar> <tLCurl> <statements> <tRCurl> else <tLCurl> <statements> <tRCurl>
                   2   |if <tLPar> <condition> <tRPar> <tLCurl> <statements> <tRCurl> else <statement>
                   3   |if <tLPar> <condition> <tRPar> <statement> else <tLCurl> <statements> <tRCurl>
                   4   |if <tLPar> <condition> <tRPar> <statement> else <statement>
                   5   |if <tLPar> <condition> <tRPar> <tLCurl> <statements> <tRCurl>
                   6   |if <tLPar> <condition> <tRPar> <statement>
		           
<while_statement> ::= while <tLPar> <condition> <tRPar> <tLCurl> <statements> <tRCurl>
                     |while <tLPar> <condition> <tRPar> <statement>

<functionDeclaration> ::=  <tFunction> <tFunctionName> <tLPar> <arguments> <tRPar> <tColon> <type> <tRCurl> <statements> <tLCurl>

<arguments> ::=  EPS
                |<variable> <variables>

<functionCall> ::= <tFunctionName> <tLPar> <parameters> <tRPar>
                  
<parameters> ::= EPS
                |<parameter> <parameters2>

<parameters2> ::= EPS
                 |<tComma> <parameter> <parameters2>
                 
<parameter> ::= <tLiteral>
               |<variable>
               |<const>
               |EPS

<statements> ::=  EPS
                 |<statement> <statements>

<statement> ::=  <expression> <tSemicolon>
                |<if_statement>
                |<while_statement>
                |<function_call> <tSemicolon>

<condition> ::=  <expression> <relational_operators> <expression>
                |<expression>

<expression> ::= |<term> <tPlus> <expression>
                 |<term> <tMinus> <expression>
                 |<term>
                 |EPS

<term> ::=  <term> <tMul> <term>
           |<term> <tDiv> <term>
           |<const>
           |<variable>

<variables> ::=  EPS
                |<tComma> <variable> <variables>

<variable> ::= <type> <tID> | <tID>
           
<const> ::= <tInt> | <tReal> | <tReal2> | <tInt2>

<type> ::= 	 <tNullTypeInt> | <tNullTypeFloat> | <tNullTypeString>
		    |<tTypeInt> | <tTypeFloat> | <tTypeString>
            
<relational_operators> ::=  <tLess> | <tLessEq> | <tMore>
                            |<tMoreEq> | <tIdentical> | <tNotIdentical> 